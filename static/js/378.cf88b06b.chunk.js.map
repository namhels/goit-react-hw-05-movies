{"version":3,"file":"static/js/378.cf88b06b.chunk.js","mappings":"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","sources":["components/HomeMovieItem/HomeMovieItem.styled.js","components/HomeMovieItem/HomeMovieItem.jsx","pages/Home/Home.styled.js","components/Searchbar/Searchbar.Styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst NavItem = styled.li`\n  color: ${p => p.theme.colors.halloween[5]};\n  cursor: pointer;\n  transition: all 300ms;\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport { NavItem };\n","import PropTypes from 'prop-types';\nimport notFoundImg from '../../images/not_found_ver.jpg';\nimport { NavItem } from './HomeMovieItem.styled';\n\nconst HomeMovieItem = ({ movie }) => {\n  const { id, poster_path, title, release_date } = movie;\n  const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : notFoundImg;\n  const year = new Date(release_date).getFullYear();\n\n  return (\n    <NavItem to={id}>\n      <img src={poster} alt={title} loading=\"lazy\" />\n      <p>{title} | {year}</p>\n    </NavItem>\n  );\n};\n\nHomeMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n}).isRequired};\n\nexport default HomeMovieItem;\n","import styled from 'styled-components';\n\nconst TitleMovieList = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.halloween[5]};\n  transition: all 300ms;\n  :hover {\n    letter-spacing: 1.8px;\n  }\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport { MovieList, TitleMovieList };\n","import { Form, Field } from 'formik';\nimport { BsSearch } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nconst SearchbarStyled = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: ${p => p.theme.colors.halloween[0]};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: ${p => p.theme.radii.medium};\n  overflow: hidden;\n`;\n\nconst SearchFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  color: ${p => p.theme.colors.halloween[5]};\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  outline: none;\n`;\n\nconst IconBsSearch = styled(BsSearch)`\n  /* position: absolute; */\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  overflow: hidden;\n  /* clip: rect(0, 0, 0, 0); */\n  white-space: nowrap;\n  /* clip-path: inset(50%); */\n  border: 0;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${SearchFormButton}:hover & {\n    color: ${p => p.theme.colors.halloween[0]};\n    transform: scale(1.3);\n  }\n`;\n\nconst SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  color: ${p => p.theme.colors.halloween[5]};\n  font: inherit;\n  font-size: 22px;\n  border: none;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 22px;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:hover::placeholder {\n    color: ${p => p.theme.colors.halloween[0]};\n    letter-spacing: ${p => p.theme.space[1]}px;\n  }\n`;\n\nexport {\n  SearchbarStyled,\n  SearchForm,\n  SearchFormButton,\n  IconBsSearch,\n  SearchFormInput,\n};\n","import PropTypes from 'prop-types';\n// import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { IconBsSearch, SearchbarStyled, SearchForm, SearchFormButton, SearchFormInput } from './Searchbar.Styled';\n\nconst schema = yup.object({\n  inputValue: yup.string().required(),\n});\n\nconst initialValues = {\n  inputValue: '',\n};\n\nconst Searchbar = ({ value, onSubmit }) => {\n  const handleSubmit = async ({ inputValue }, { resetForm, setSubmitting }) => {\n    await onSubmit(inputValue);\n    setSubmitting(false);\n    resetForm();\n  };\n\n\n  return (\n    <SearchbarStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <SearchForm>\n            <SearchFormButton type=\"submit\">\n              <IconBsSearch />\n            </SearchFormButton>\n            <SearchFormInput\n              name=\"inputValue\"\n              value={value}\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n              />\n          </SearchForm>\n        )}\n      </Formik>\n    </SearchbarStyled>\n  );\n};\n\nSearchbar.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect, useMemo } from \"react\";\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport api from \"utils/apiThemoviedb\";\nimport HomeMovieItem from \"components/HomeMovieItem\";\nimport { MovieList, TitleMovieList } from \"../Home/Home.styled\";\nimport Box from \"components/Box\";\nimport Searchbar from \"components/Searchbar\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterParam = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    // console.log(location);\n  const getMovies = async () => {\n    try {\n      api.query = { from: location };\n      const  { results }  = await  api.getMovieSearch();\n      setMovies(results);\n\n    } catch (error) {\n      toast.error(`Ouch! Something went wrong :( Reload the page and try again!`);\n    };\n    };\n    getMovies();\n  }, [location]);\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  const visibleMovies = useMemo(() => {\n    return movies.filter(movie =>\n      movie.title.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [movies, filterParam]);\n\n  return (\n    <Box p={4} bg=\"grey.0\">\n      <Searchbar value={filterParam} onSubmit={changeFilter} />\n      <TitleMovieList>Finding Movies</TitleMovieList>\n      <MovieList>\n        {visibleMovies.map((movie) =>\n          <HomeMovieItem key={movie.id} movie={movie} state={{ from: location }} />\n        )}\n      </MovieList>\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["NavItem","styled","p","theme","colors","halloween","movie","id","poster_path","title","release_date","poster","notFoundImg","year","Date","getFullYear","to","src","alt","loading","TitleMovieList","space","MovieList","SearchbarStyled","SearchForm","Form","radii","medium","SearchFormButton","IconBsSearch","BsSearch","SearchFormInput","Field","schema","yup","inputValue","required","initialValues","value","onSubmit","handleSubmit","resetForm","setSubmitting","validationSchema","isSubmitting","type","name","autoComplete","autoFocus","placeholder","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","getMovies","api","from","results","toast","visibleMovies","useMemo","filter","toLowerCase","includes","Box","bg","map","HomeMovieItem","state"],"sourceRoot":""}