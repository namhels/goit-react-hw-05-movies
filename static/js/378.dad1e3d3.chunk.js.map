{"version":3,"file":"static/js/378.dad1e3d3.chunk.js","mappings":"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","sources":["components/HomeMovieItem/HomeMovieItem.styled.js","components/HomeMovieItem/HomeMovieItem.jsx","pages/Home/Home.styled.js","components/Searchbar/Searchbar.Styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Item = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${p => p.theme.colors.halloween[3]};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 300ms;\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport { Item };\n","import PropTypes from 'prop-types';\nimport notFoundImg from '../../images/not_found_ver.jpg';\nimport { Item } from './HomeMovieItem.styled';\n\nconst HomeMovieItem = ({ movie, state }) => {\n  const { id, poster_path, title, release_date } = movie;\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : notFoundImg;\n  const year = new Date(release_date).getFullYear();\n\n  return (\n    <Item to={`/movies/${id}`} state={state}>\n      <img src={poster} alt={title} loading=\"lazy\" />\n      <p>\n        {title} | {year}\n      </p>\n    </Item>\n  );\n};\n\nHomeMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n  state: PropTypes.object,\n};\n\nexport default HomeMovieItem;\n","import styled from 'styled-components';\n\nconst TitleMovieList = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.halloween[5]};\n  transition: all 300ms;\n  :hover {\n    letter-spacing: 1.8px;\n  }\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 1.4rem;\n`;\n\nexport { MovieList, TitleMovieList };\n","import { Form, Field } from 'formik';\nimport { BsSearch } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nconst SearchFormWrapper = styled.div`\n  padding-left: ${p => p.theme.space[7]}px;\n  padding-right: ${p => p.theme.space[7]}px;\n`;\n\nconst SearchForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  /* margin-left: auto;\n  margin-right: auto; */\n\n  background-color: #fff;\n  border-radius: ${p => p.theme.radii.medium};\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadows.small};\n  transition: all 300ms;\n  :hover {\n    border-color: ${p => p.theme.colors.blues[0]};\n    box-shadow: ${p => p.theme.shadows.mediumBlue};\n  }\n`;\n\nconst SearchFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  color: ${p => p.theme.colors.halloween[5]};\n  background-color: ${p => p.theme.colors.halloween[7]};\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  outline: none;\n`;\n\nconst IconBsSearch = styled(BsSearch)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  border: 0;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${SearchFormButton}:hover & {\n    color: ${p => p.theme.colors.halloween[0]};\n    transform: scale(1.3);\n  }\n`;\n\nconst SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  color: ${p => p.theme.colors.halloween[5]};\n  font: inherit;\n  font-size: 22px;\n  border: none;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 22px;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:hover::placeholder {\n    color: ${p => p.theme.colors.halloween[0]};\n    letter-spacing: ${p => p.theme.space[1]}px;\n  }\n`;\n\nexport {\n  SearchFormWrapper,\n  SearchForm,\n  SearchFormButton,\n  IconBsSearch,\n  SearchFormInput,\n};\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  IconBsSearch,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n  SearchFormWrapper,\n} from './Searchbar.Styled';\n\nconst schema = yup.object({\n  inputValue: yup.string().required(),\n});\n\nconst initialValues = {\n  inputValue: '',\n};\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = async ({ inputValue }, { setSubmitting }) => {\n    await onSubmit(inputValue);\n    setSubmitting(false);\n    // resetForm();\n  };\n\n  return (\n    <SearchFormWrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <SearchForm>\n            <SearchFormButton type=\"submit\" disabled={isSubmitting}>\n              <IconBsSearch />\n            </SearchFormButton>\n            <SearchFormInput\n              name=\"inputValue\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n            />\n          </SearchForm>\n        )}\n      </Formik>\n    </SearchFormWrapper>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport api from 'utils/apiThemoviedb';\nimport HomeMovieItem from 'components/HomeMovieItem';\nimport { MovieList, TitleMovieList } from '../Home/Home.styled';\nimport Box from 'components/Box';\nimport Searchbar from 'components/Searchbar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterParam = searchParams.get('filter') ?? '';\n\n  // console.log(location);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        if (!filterParam) {\n          return null;\n        }\n        api.query = filterParam;\n        const { results } = await api.getMovieSearch();\n        setMovies(results);\n      } catch (error) {\n        toast.error(\n          `Ouch! Something went wrong :( Reload the page and try again!`\n        );\n      }\n    };\n    getMovies();\n  }, [filterParam]);\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  return (\n    <Box p={4} bg=\"grey.0\" width=\"100%\">\n      <Searchbar onSubmit={changeFilter} />\n      {movies.length ? <TitleMovieList>Finding Movies</TitleMovieList> : null}\n      <MovieList>\n        {movies.map(movie => (\n          <HomeMovieItem\n            key={movie.id}\n            movie={movie}\n            state={{ from: location }}\n          />\n        ))}\n      </MovieList>\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["Item","styled","Link","p","theme","colors","halloween","fontWeights","bold","movie","state","id","poster_path","title","release_date","poster","notFoundImg","year","Date","getFullYear","to","src","alt","loading","TitleMovieList","space","MovieList","SearchFormWrapper","SearchForm","Form","radii","medium","shadows","small","blues","mediumBlue","SearchFormButton","IconBsSearch","BsSearch","SearchFormInput","Field","schema","yup","inputValue","required","initialValues","onSubmit","handleSubmit","setSubmitting","validationSchema","isSubmitting","type","disabled","name","autoComplete","autoFocus","placeholder","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","getMovies","api","results","toast","Box","bg","width","value","filter","length","map","HomeMovieItem","from"],"sourceRoot":""}