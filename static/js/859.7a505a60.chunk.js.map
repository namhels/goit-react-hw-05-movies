{"version":3,"file":"static/js/859.7a505a60.chunk.js","mappings":"gMAEMA,E,QAAUC,GAAAA,GAAH,mIACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UAAU,EAA7B,I,SCsBZ,EArBsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACfC,EAAyCD,EAAzCC,GAAIC,EAAqCF,EAArCE,YAAaC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,aAC1BC,EAASH,EAAW,yCAAqCA,GAAgBI,EACzEC,EAAO,IAAIC,KAAKJ,GAAcK,cAEpC,OACE,UAACf,EAAD,CAASgB,GAAIT,EAAb,WACE,gBAAKU,IAAKN,EAAQO,IAAKT,EAAOU,QAAQ,UACtC,yBAAIV,EAAJ,MAAcI,OAGnB,C,yGCbKO,EAAiBnB,EAAAA,GAAAA,GAAH,8MAIA,SAAAC,GAAC,OAAIA,EAAEC,MAAMkB,MAAM,EAAlB,IACV,SAAAnB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UAAU,EAA7B,IAONiB,EAAYrB,EAAAA,GAAAA,GAAH,mGAGN,SAAAC,GAAC,OAAIA,EAAEC,MAAMkB,MAAM,EAAlB,G,oLCmBV,EA7Ba,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAS,mCAAG,+GAEeC,EAAAA,EAAAA,oBAFf,gBAELC,EAFK,EAELA,QACTH,EAAUG,GAHI,gDAMdC,EAAAA,GAAAA,MAAA,gEANc,iEAAH,qDAcf,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,KAGD,UAACK,EAAA,EAAD,CAAK7B,EAAG,EAAG8B,GAAG,SAAd,WACE,SAAC,IAAD,+BACA,SAAC,IAAD,UACGR,EAAOS,KAAI,SAAC3B,GAAD,OACV,SAAC4B,EAAA,EAAD,CAA8B5B,MAAOA,GAAjBA,EAAMC,GADhB,QAMnB,C","sources":["components/HomeMovieItem/HomeMovieItem.styled.js","components/HomeMovieItem/HomeMovieItem.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst NavItem = styled.li`\n  color: ${p => p.theme.colors.halloween[5]};\n  cursor: pointer;\n  transition: all 300ms;\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport { NavItem };\n","import PropTypes from 'prop-types';\nimport notFoundImg from '../../images/not_found_ver.jpg';\nimport { NavItem } from './HomeMovieItem.styled';\n\nconst HomeMovieItem = ({ movie }) => {\n  const { id, poster_path, title, release_date } = movie;\n  const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : notFoundImg;\n  const year = new Date(release_date).getFullYear();\n\n  return (\n    <NavItem to={id}>\n      <img src={poster} alt={title} loading=\"lazy\" />\n      <p>{title} | {year}</p>\n    </NavItem>\n  );\n};\n\nHomeMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n}).isRequired};\n\nexport default HomeMovieItem;\n","import styled from 'styled-components';\n\nconst TitleMovieList = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.halloween[5]};\n  transition: all 300ms;\n  :hover {\n    letter-spacing: 1.8px;\n  }\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport { MovieList, TitleMovieList };\n","import { useState, useEffect } from \"react\";\nimport { toast } from 'react-toastify';\nimport api from \"utils/apiThemoviedb\";\nimport HomeMovieItem from \"components/HomeMovieItem\";\nimport { MovieList, TitleMovieList } from \"./Home.styled\";\nimport Box from \"components/Box\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  const getMovies = async () => {\n    try {\n      const  { results }  = await  api.getTrendingMovies();\n      setMovies(results);\n\n    } catch (error) {\n      toast.error(`Ouch! Something went wrong :( Reload the page and try again!`);\n    };\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <Box p={4} bg=\"grey.0\">\n      <TitleMovieList>Trending Movies</TitleMovieList>\n      <MovieList>\n        {movies.map((movie) =>\n          <HomeMovieItem key={movie.id} movie={movie} />\n        )}\n      </MovieList>\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["NavItem","styled","p","theme","colors","halloween","movie","id","poster_path","title","release_date","poster","notFoundImg","year","Date","getFullYear","to","src","alt","loading","TitleMovieList","space","MovieList","useState","movies","setMovies","getMovies","api","results","toast","useEffect","Box","bg","map","HomeMovieItem"],"sourceRoot":""}