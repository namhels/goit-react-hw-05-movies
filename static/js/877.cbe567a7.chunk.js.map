{"version":3,"file":"static/js/877.cbe567a7.chunk.js","mappings":"qPAEMA,EAAUC,EAAAA,GAAAA,GAAH,uaAMG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACQ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAU,EAA7B,IACX,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,QAAQC,MAApB,IAA6B,SAAAN,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAU,EAA7B,IACxB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAlB,IACJ,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,QAAQC,KAApB,IAGG,SAAAV,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAU,EAA7B,IACH,SAAAJ,GAAC,OAAIA,EAAEC,MAAMQ,QAAQE,UAApB,IAIbC,EAAWb,EAAAA,GAAAA,GAAH,oMACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACQ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAU,EAA7B,IACX,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,QAAQC,MAApB,IAA6B,SAAAN,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAU,EAA7B,IACxB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAlB,IACJ,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,QAAQC,KAApB,IAGC,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,QAAQI,YAApB,IAIbC,EAAYf,EAAAA,GAAAA,IAAH,8FACI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAlB,G,oLCSpB,EAvCa,WACX,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,IAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,sGAEbC,EAAAA,EAAAA,GAASC,OAAOL,GAFH,SAGUI,EAAAA,EAAAA,kBAHV,gBAGLN,EAHK,EAGLA,KACRC,EAAQD,GAJK,gDAMbQ,EAAAA,GAAAA,MAAA,gEANa,yDAAH,qDAWdH,GACD,GAAE,CAACH,KAECF,EACH,OAAO,KAMT,OACE,SAAC,KAAD,UACGA,EAAKS,KAAI,gBALCC,EAKEC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,UAAC,KAAD,YACE,SAAC,KAAD,CAAWC,MAAOF,EAAMG,KAPjBN,EAO6BE,EAN1CF,EAAW,yCAAqCA,GAAgBO,GAMPC,IAAKL,KACxD,wBAAKA,KACL,uCAAeC,OAHFH,EADP,KASf,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastBox = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: 1.4rem;\n  width: 80%;\n  max-width: 1200px;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.halloween[7]};\n  border: ${p => p.theme.borders.normal}${p => p.theme.colors.halloween[1]};\n  border-radius: ${p => p.theme.radii.middle};\n  box-shadow: ${p => p.theme.shadows.small};\n  transition: all 300ms;\n  :hover {\n    border-color: ${p => p.theme.colors.halloween[0]};\n    box-shadow: ${p => p.theme.shadows.mediumBlue};\n  }\n`;\n\nconst ItemCast = styled.li`\n  padding: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.halloween[4]};\n  border: ${p => p.theme.borders.normal}${p => p.theme.colors.halloween[3]};\n  border-radius: ${p => p.theme.radii.middle};\n  box-shadow: ${p => p.theme.shadows.small};\n  transition: all 300ms;\n  :hover {\n    box-shadow: ${p => p.theme.shadows.mediumOrange};\n  }\n`;\n\nconst ImageCast = styled.img`\n  margin-bottom: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.middle};\n  object-fit: cover;\n`;\n\nexport { CastBox, ItemCast, ImageCast };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport notFoundImg from '../../images/not_found_ver.jpg';\nimport api from 'utils/apiThemoviedb';\nimport { CastBox, ImageCast, ItemCast } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCasts = async () => {\n      try {\n        api.id = Number(movieId);\n        const { cast } = await api.getMovieCredits();\n        setCast(cast);\n      } catch (error) {\n        toast.error(\n          `Ouch! Something went wrong :( Reload the page and try again!`\n        );\n      }\n    };\n    getCasts();\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  const poster = profilePath =>\n    profilePath ? `https://image.tmdb.org/t/p/w500${profilePath}` : notFoundImg;\n\n  return (\n    <CastBox>\n      {cast.map(({ cast_id, profile_path, name, character }) => (\n        <ItemCast key={cast_id}>\n          <ImageCast title={name} src={poster(profile_path)} alt={name} />\n          <h4>{name}</h4>\n          <p>Character: {character}</p>\n        </ItemCast>\n      ))}\n    </CastBox>\n  );\n};\n\nexport default Cast;\n"],"names":["CastBox","styled","p","theme","space","colors","halloween","borders","normal","radii","middle","shadows","small","mediumBlue","ItemCast","mediumOrange","ImageCast","useState","cast","setCast","movieId","useParams","useEffect","getCasts","api","Number","toast","map","profilePath","cast_id","profile_path","name","character","title","src","notFoundImg","alt"],"sourceRoot":""}